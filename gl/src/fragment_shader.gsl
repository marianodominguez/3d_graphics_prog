#version 130

in vec3 Normal;
in vec3 FragPos;
in vec2 TexCoord;

uniform vec4 lightCamera;
uniform vec3 viewPos;
// texture sampler
uniform sampler2D texture1;
out vec4 FragColor;
void main()
{
    vec3 ambient = vec3(0.2, 0.2, 0.2);
    vec3 objColor = vec3(0.8392, 0.2667, 0.698);

    float specularStrength = 0.5;

    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(vec3(lightCamera) - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);

    vec3 reflectDir = reflect(-lightDir, norm);
    vec3 viewDir = normalize(viewPos - FragPos);

    float spec = pow(max(dot(viewDir, reflectDir), 0.0), 128);
    vec3 specular = specularStrength * spec * vec3(1.0,1.0,1.0);

    vec3 color = (diff+specular+ambient)*objColor;

    //gl_FragColor = mix(vec4(color, 1.0),texture(texture1, TexCoord),0.7);
    FragColor = vec4(color, 1.0)+texture(texture1, TexCoord);
}